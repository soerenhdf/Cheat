local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local hrp = character:WaitForChild("HumanoidRootPart")
local startPosition = CFrame.new(0, 10, 0)  -- Startposition für das Obby

local obstacles = {}  -- Sammlung von Hindernissen

-- Funktion zum Hinzufügen von Hindernissen
local function findObstacles()
    for _, object in pairs(workspace:GetChildren()) do
        if object:IsA("Part") and object.Name == "Obstacle" then
            table.insert(obstacles, object)
        end
    end
end

-- Grundlegende KI-Funktion, um Hindernisse zu umgehen
local function moveAI()
    -- Bewege den Spieler in eine zufällige Richtung
    local moveDirection = Vector3.new(math.random(-1, 1), 0, math.random(-1, 1))
    humanoid:MoveTo(hrp.Position + moveDirection)

    -- Überprüfe, ob das AI-Objekt ein Hindernis erkennt und weicht aus
    for _, obstacle in pairs(obstacles) do
        if (hrp.Position - obstacle.Position).Magnitude < 5 then
            -- Hindernis in der Nähe, weiche aus
            humanoid:MoveTo(hrp.Position + (hrp.Position - obstacle.Position).unit * 10)
        end
    end
end

-- Funktion für die Kollisionserkennung und -umgehung
local function detectCollision()
    while true do
        -- Überprüfe, ob der Humanoid mit einem Hindernis kollidiert
        for _, obstacle in pairs(obstacles) do
            if (hrp.Position - obstacle.Position).Magnitude < 5 then
                -- Kollision erkannt, bewege den Charakter weg
                humanoid:MoveTo(hrp.Position + (hrp.Position - obstacle.Position).unit * 10)
            end
        end
        wait(0.1)
    end
end

-- Starte das Finden von Hindernissen und die KI-Bewegung
findObstacles()
detectCollision()

-- Bewege die KI kontinuierlich
while true do
    moveAI()
    wait(1)  -- Update alle 1 Sekunde
end
