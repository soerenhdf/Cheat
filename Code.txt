-- GUI erstellen
local ScreenGui = Instance.new("ScreenGui", game.CoreGui)
local Toggle = Instance.new("TextButton", ScreenGui)
Toggle.Size = UDim2.new(0, 150, 0, 50)
Toggle.Position = UDim2.new(0, 20, 0, 150)
Toggle.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
Toggle.TextColor3 = Color3.new(1, 1, 1)
Toggle.Text = "Start AI"
Toggle.TextScaled = true

local aiRunning = false
local checkpoints = {}
local player = game.Players.LocalPlayer
local espRadius = 5  -- ESP Umkreis auf 5 Studs ändern
local pathfindingService = game:GetService("PathfindingService")
local espObjects = {}

-- Überprüfe, ob ein Block im Weg ist
local function checkForObstacles(position)
    local ray = workspace:Raycast(position, Vector3.new(0, -1, 0) * 5, RaycastParams.new())
    return ray and ray.Instance
end

-- Funktion zum Erkennen der Checkpoints
local function getNextCheckpoint()
    local nearestCheckpoint = nil
    local shortestDistance = math.huge

    -- Alle Teile in der Nähe durchsuchen
    for _, part in pairs(workspace:GetDescendants()) do
        if part:IsA("BasePart") and part.Name == "Checkpoint" and not part:FindFirstChild("Activated") then
            local dist = (player.Character.HumanoidRootPart.Position - part.Position).Magnitude
            if dist < shortestDistance then
                nearestCheckpoint = part
                shortestDistance = dist
            end
        end
    end
    return nearestCheckpoint
end

-- KI starten
local function startAI()
    aiRunning = true
    while aiRunning do
        local checkpoint = getNextCheckpoint()

        if checkpoint then
            -- Berechnung des Weges zum nächsten Checkpoint
            local path = pathfindingService:CreatePath({
                AgentRadius = 2,
                AgentHeight = 5,
                AgentCanJump = true,
                AgentJumpHeight = 10,
                AgentMaxSlope = 45,
            })

            path:ComputeAsync(player.Character.HumanoidRootPart.Position, checkpoint.Position)
            path:MoveTo(player.Character)

            -- Warten bis der Checkpoint erreicht wurde
            path.Completed:Wait()

            -- Markiere den Checkpoint als aktiviert
            if checkpoint:FindFirstChild("Activated") == nil then
                local activatedTag = Instance.new("BoolValue")
                activatedTag.Name = "Activated"
                activatedTag.Parent = checkpoint
            end
        else
            -- Keine Checkpoints gefunden, KI wartet
            wait(1)
        end
    end
end

-- ESP für nahe Objekte
local function espObjectsInRange()
    for _, part in pairs(workspace:GetDescendants()) do
        if part:IsA("BasePart") and (part.Position - player.Character.HumanoidRootPart.Position).Magnitude < espRadius then
            -- Überprüfe, ob es nicht der Spieler ist
            if part.Parent ~= player.Character then
                local box = Instance.new("BoxHandleAdornment")
                box.Parent = part
                box.Adornee = part
                box.Size = part.Size + Vector3.new(0.2, 0.2, 0.2)
                box.Color3 = Color3.fromRGB(0, 255, 0) -- Grüner Rand
                box.AlwaysOnTop = true
            end
        end
    end
end

-- Stoppen der KI
local function stopAI()
    aiRunning = false
end

-- Button für das Starten/Stoppen der KI
Toggle.MouseButton1Click:Connect(function()
    if aiRunning then
        stopAI()
        Toggle.Text = "Start AI"
    else
        startAI()
        Toggle.Text = "Stop AI"
    end
end)

-- Update ESP in der Nähe
while true do
    espObjectsInRange()
    wait(1)  -- ESP alle 0.5 Sekunden aktualisieren
end
