-- Erstelle das ScreenGui für den Start
local player = game.Players.LocalPlayer
local pathfindingService = game:GetService("PathfindingService")
local targetPosition = nil

-- Wenn der Spieler auf einen Punkt klickt
game:GetService("UserInputService").InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        -- Berechne die Zielposition auf dem Bildschirm
        targetPosition = workspace.CurrentCamera:ScreenToWorldPoint(Vector3.new(input.Position.X, input.Position.Y, 0))

        -- Sobald das Ziel gesetzt ist, starte das Pfadfinding
        if targetPosition then
            startAI(targetPosition)
        end
    end
end)

-- KI startet und geht zum Ziel
local function startAI(target)
    -- Verwende Pathfinding, um den besten Weg zu finden
    local path = pathfindingService:CreatePath({
        AgentRadius = 2,
        AgentHeight = 5,
        AgentCanJump = true,
        AgentJumpHeight = 10,
        AgentMaxSlope = 45,
    })

    -- Berechne den Pfad vom aktuellen Standort des Spielers zum Ziel
    path:ComputeAsync(player.Character.HumanoidRootPart.Position, target)

    -- Bewege den Charakter entlang des Pfades
    path:MoveTo(player.Character)

    -- Warte, bis der Pfad abgeschlossen ist
    path.Completed:Wait()
end

-- Funktion wird alle 0,5 Sekunden wiederholt, um sicherzustellen, dass die KI immer noch auf dem Pfad bleibt
while true do
    if targetPosition then
        -- Wenn ein Ziel festgelegt wurde, starte die KI und führe den Pfad aus
        startAI(targetPosition)
    end
    wait(0.5)  -- Verzögerung für die Berechnung
end
